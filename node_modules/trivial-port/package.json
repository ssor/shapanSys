{
  "name": "trivial-port",
  "version": "0.1.0",
  "description": "Node.js library to open serial ports for reading and writing",
  "main": "serialport.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bminer/trivial-port.git"
  },
  "keywords": [
    "serial",
    "port",
    "node"
  ],
  "author": {
    "name": "Blake Miner",
    "email": "miner.blake@gmail.com"
  },
  "engines": {
    "node": ">=0.8"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bminer/trivial-port/issues"
  },
  "readme": "trivial-port\r\n============\r\n\r\nNode.js library to open serial ports for reading and writing\r\n\r\nOperating System Support\r\n------------------------\r\n- **Linux** - Works\r\n- **Mac OSX** - May work with a few minor tweaks\r\n- **Windows** - It should work using the [`MODE`]\r\n(http://www.computerhope.com/modehlp.htm) command instead of `stty`.\r\nCheckout [this StackOverflow post](http://stackoverflow.com/questions/5728691/nodejs-reading-tty-serial)\r\n\r\nWhy?\r\n----\r\nMostly because node-serialport and other C/C++ Node add-ons are a bit buggy IMHO.\r\n\r\nUsage\r\n-----\r\n```javascript\r\nvar SerialPort = require(\"trivial-port\");\r\nvar port = new SerialPort();\r\nport.initialize();\r\nport.on(\"data\", function(chunk) {\r\n\tconsole.log(\"Incoming:\", chunk);\r\n})\r\nport.write(\"Hello, World!\");\r\n```\r\n\r\nTrivial-port implements a [Duplex stream](http://nodejs.org/api/stream.html#stream_class_stream_duplex)\r\nfor reading from and writing to a serial port.\r\n\r\nThis implementation uses [`stty`](http://www.freebsd.org/cgi/man.cgi?query=stty&sektion=1)\r\nto initialize the stream; then, it simply reads from or writes to the serial\r\nport using the [`fs` Node.js library](http://nodejs.org/api/fs.html).\r\n\r\n\r\n### `var port = new SerialPort(options);`\r\n\r\nThe options object allows you to pass named options to the serial port during\r\ninitialization. The valid attributes for the options object are the following:\r\n\r\n- `serialPort` - the serial port device name (required)\r\n- `baudRate` - Baud Rate (defaults to 9600)\r\n- `dataBits` - Data Bits - Must be one of: 8, 7, 6, or 5. (defaults to 8)\r\n- `stopBits` - Stop Bits - Must be one of: 1 or 2. (defaults to 1)\r\n- `parity` - Parity - Must be one of: 'none', 'odd', 'even',\r\n\t'mark', 'space' (defaults to 'none')\r\n- `sttyPath` - the path to the `stty` command (defaults to /bin/stty)\r\n- `initTimeout` - maximum initialization duration (defaults to 10 seconds);\r\n\tset to `null` to allow an infinite amount of time\r\n\r\n### `port.initialize([cb])`\r\n\r\nSets the appropriate serial port options and opens the serial port.  If `cb`\r\nis specified, it is called when the port has been opened. `cb` is of the form\r\n`cb(err)`.\r\n\r\n### `port.close([cb])`\r\n\r\nCloses the serial port.  If `cb` is specified, it is called when the port\r\nhas been closed.  `cb` is of the form `cb(err)`.\r\n\r\n### Lots more methods\r\n\r\nThe `SerialPort` class inherits all of the methods and events of [Readable]\r\n(http://nodejs.org/api/stream.html#stream_class_stream_readable) and [Writable]\r\n(http://nodejs.org/api/stream.html#stream_class_stream_writable) interfaces.",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/bminer/trivial-port",
  "_id": "trivial-port@0.1.0",
  "dist": {
    "shasum": "ce987fd1e94bfa08a0bf88acb5f884bd6fad63a2"
  },
  "_from": "trivial-port@",
  "_resolved": "https://registry.npmjs.org/trivial-port/-/trivial-port-0.1.0.tgz"
}
